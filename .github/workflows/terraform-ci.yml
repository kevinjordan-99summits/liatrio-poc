name: 'Terraform CI'

on:
  push:
    branches: [ "main" ]
    paths: 
    - iac
  pull_request:
    branches: [ "main" ]
    paths: 
    - iac
  workflow_dispatch:

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  
jobs:
  terraform-tests:
    name: 'Terraform Test'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./iac
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init -backend=false
    - name: Terraform Validate
      run: terraform validate
    - name: Terraform Format
      run: terraform fmt -check -recursive
      
  terraform-deploy:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest
    needs: terraform-tests
    environment: DEV
    defaults:
      run:
        working-directory: ./iac
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
    - name: Terraform Init
      run: terraform init
    - name: Terraform Apply
      run: terraform apply -auto-approve -backend-config="key=tfstate-${{ vars.ENV_NAME }}" -var="container_registry_url=${{ secrets.REGISTRY_LOGIN_SERVER }}" -var="container_registry_username=${{ secrets.REGISTRY_USERNAME }}" -var="container_registry_password=${{ secrets.REGISTRY_PASSWORD }}"
